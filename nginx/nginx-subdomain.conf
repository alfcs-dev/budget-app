events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Upstream for expense tracker (host ports)
    upstream expense_tracker_backend {
        server localhost:3011;
    }

    upstream expense_tracker_frontend {
        server localhost:3010;
    }

    # SSL redirect (uncomment when SSL is configured)
    # server {
    #     listen 80;
    #     server_name alfcs.dev www.alfcs.dev budget.alfcs.dev;
    #     return 301 https://$server_name$request_uri;
    # }

    # Main domain: alfcs.dev (existing Astro site)
    server {
        listen 80;
        # listen 443 ssl http2; # Uncomment when SSL is configured
        server_name alfcs.dev www.alfcs.dev;

        # SSL configuration (uncomment when ready)
        # ssl_certificate /etc/nginx/ssl/alfcs.dev/fullchain.pem;
        # ssl_certificate_key /etc/nginx/ssl/alfcs.dev/privkey.pem;
        # ssl_session_timeout 1d;
        # ssl_session_cache shared:SSL:50m;
        # ssl_session_tickets off;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
        # ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        # add_header Strict-Transport-Security "max-age=63072000" always; # Uncomment when SSL is configured

        # Root directory for your existing Astro site
        root /var/www/alfcs.dev;
        index index.html index.htm;

        # Serve existing Astro static site
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check for main site
        location /health {
            access_log off;
            return 200 "alfcs.dev healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Subdomain: budget.alfcs.dev (Expense Tracker)
    server {
        listen 80;
        # listen 443 ssl http2; # Uncomment when SSL is configured
        server_name budget.alfcs.dev;

        # SSL configuration (uncomment when ready)
        # ssl_certificate /etc/nginx/ssl/budget.alfcs.dev/fullchain.pem;
        # ssl_certificate_key /etc/nginx/ssl/budget.alfcs.dev/privkey.pem;
        # ssl_session_timeout 1d;
        # ssl_session_cache shared:SSL:50m;
        # ssl_session_tickets off;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
        # ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        # add_header Strict-Transport-Security "max-age=63072000" always; # Uncomment when SSL is configured

        # API routes - proxy to expense tracker backend
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://expense_tracker_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Auth routes with stricter rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://expense_tracker_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Frontend - proxy to expense tracker frontend
        location / {
            proxy_pass http://expense_tracker_frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check for expense tracker
        location /health {
            access_log off;
            return 200 "budget.alfcs.dev healthy\n";
            add_header Content-Type text/plain;
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}